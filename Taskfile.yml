version: '3'

vars:
  PORT: 3000

env:
  APP_PORT: "{{ .PORT }}"

tasks:

  install:
    desc: Install dependencies
    run: once
    sources:
      - package.json
      - yarn.lock
    cmds:
      - yarn set version 4.2.2
      - yarn install --immutable

  dev:
    desc: Start development server
    deps: [install]
    cmds:
      - npx nest start --watch

  format:
    desc: Format codebase
    deps: [install]
    dir: src
    sources:
      - ./**/*.ts
    cmds:
      - npx prettier --write .
      - npx eslint ./**/*.ts --fix

  lint:
    desc: Lint codebase
    deps: [install]
    dir: src
    sources:
      - ./**/*.ts
    cmds:
      - npx prettier --check .
      - npx eslint ./**/*.ts

  test:
    desc: Run unit tests
    deps: [install, lint]
    cmds:
      - npx vitest run

  test:watch:
    desc: Run unit tests in watch mode
    deps: [install]
    cmds:
      - npx vitest watch

  build:
    desc: Build Docker image
    cmds:
      - docker compose build

  serve:
    desc: Serve application and attach log view
    deps: [build]
    interactive: true
    cmds:
      - docker compose up -d
      - docker compose logs -f

  destroy:
    desc: Destroy application
    cmds:
      - docker compose down -v

  test:integration:
    desc: Run integration tests
    cmds:
      - defer:
          task: destroy
      - bash integration-tests.sh
    env:
      API_KEY:
        sh: op read "op://Employee/OpenAI/Security/API_KEY"
